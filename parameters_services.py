import sys, os ; sys.path.insert(0,os.path.dirname(os.path.dirname(__file__)))
from sgl_services import Sgl ; sgl = Sgl()
from datetime import datetime
from base64 import b64decode
import urllib3
import logging

logging.basicConfig(level=logging.DEBUG, filename="logfile", filemode="a+", format="%(asctime)-15s %(levelname)-8s %(message)s")

urllib3.disable_warnings()

class Parameters():

    def __init__(self,environment_aie,environment_blz): 

        """ Realiza a coleta dos parametros de homologação e produção na base de dados 

        Bases para coleta de dados: AIE/SGL/MONGO
        Bases para cadastro de dados: BLZ
        
        Parametros AIE """
        
        #PostgreSQL Server AIE
        self.sql_server_aie = sgl.get_sgl_parameter('sql_server_aie',data_for_collection=True,data_for_insertion=False,environment=environment_aie)

        #PostgreSQL Database AIE
        self.sql_database_aie = sgl.get_sgl_parameter('sql_database_aie',data_for_collection=True,data_for_insertion=False,environment=environment_aie)

        #PostgreSQL Port AIE
        self.sql_port_aie = sgl.get_sgl_parameter('sql_port_aie',data_for_collection=True,data_for_insertion=False,environment=environment_aie)

        #PostgreSQL User AIE
        self.sql_user_aie = b64decode(sgl.get_sgl_parameter('sql_user_aie',data_for_collection=True,data_for_insertion=False,environment=environment_aie))

        #PostgreSQL Password AIE
        self.sql_password_aie = b64decode(sgl.get_sgl_parameter('sql_password_aie',data_for_collection=True,data_for_insertion=False,environment=environment_aie))

        """ Parametros SGL """

        #PostgreSQL Server SGL
        self.sql_server_sgl = sgl.get_sgl_parameter('sql_server_sgl',data_for_collection=True,data_for_insertion=False,environment=environment_aie)

        #PostgreSQL Database SGL
        self.sql_database_sgl = sgl.get_sgl_parameter('sql_database_sgl',data_for_collection=True,data_for_insertion=False,environment=environment_aie)

        #PostgreSQL Port BLZ
        self.sql_port_sgl = sgl.get_sgl_parameter('sql_port_sgl',data_for_collection=True,data_for_insertion=False,environment=environment_aie)

        #PostgreSQL User BLZ
        self.sql_user_sgl = b64decode(sgl.get_sgl_parameter('sql_user_sgl',data_for_collection=True,data_for_insertion=False,environment=environment_aie))

        #PostgreSQL Password BLZ
        self.sql_password_sgl = b64decode(sgl.get_sgl_parameter('sql_password_sgl',data_for_collection=True,data_for_insertion=False,environment=environment_aie))

        """ Parametros Mongo """

        #Mongo Server
        self.mongo_server = sgl.get_sgl_parameter('mongo_server',data_for_collection=True,data_for_insertion=False,environment=environment_aie)

        #Mongo Database
        self.mongo_database = sgl.get_sgl_parameter('mongo_database',data_for_collection=True,data_for_insertion=False,environment=environment_aie)

        #Mongo Port
        self.mongo_port = sgl.get_sgl_parameter('mongo_port',data_for_collection=True,data_for_insertion=False,environment=environment_aie)

        #Mongo Collection
        self.mongo_collection = sgl.get_sgl_parameter('mongo_collection',data_for_collection=True,data_for_insertion=False,environment=environment_aie)

        #Mongo User
        self.mongo_user = b64decode(sgl.get_sgl_parameter('mongo_user',data_for_collection=True,data_for_insertion=False,environment=environment_aie))

        #Mongo Password
        self.mongo_password = b64decode(sgl.get_sgl_parameter('mongo_password',data_for_collection=True,data_for_insertion=False,environment=environment_aie))

        """ Parametros BLZ """

        #PostgreSQL Server BLZ
        self.sql_server_blz = sgl.get_sgl_parameter('sql_server_blz',data_for_collection=False,data_for_insertion=True,environment=environment_blz)

        #PostgreSQL Database BLZ
        self.sql_database_blz = sgl.get_sgl_parameter('sql_database_blz',data_for_collection=False,data_for_insertion=True,environment=environment_blz)

        #PostgreSQL Port BLZ
        self.sql_port_blz = sgl.get_sgl_parameter('sql_port_blz',data_for_collection=False,data_for_insertion=True,environment=environment_blz)

        #PostgreSQL User BLZ
        self.sql_user_blz = b64decode(sgl.get_sgl_parameter('sql_user_blz',data_for_collection=False,data_for_insertion=True,environment=environment_blz))

        #PostgreSQL Password BLZ
        self.sql_password_blz = b64decode(sgl.get_sgl_parameter('sql_password_blz',data_for_collection=False,data_for_insertion=True,environment=environment_blz))