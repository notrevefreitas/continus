import uuid
import urllib3
from time import sleep
from datetime import datetime
from mongo_services import MongoDB
from sql_services import PostgreSQL
from camunda_services import Camunda
from xml_services import XmlTreatment
from parameters_services import Parameters
import sys
import os
sys.path.insert(0, os.path.dirname(os.path.dirname(__file__)))
urllib3.disable_warnings()


class WorkflowService():
    def __init__(self, parameter, owner, creator_user_principal_name, display_name, squad_name):
        """ Parametros:

            - environment_aie: Refere-se ao ambiente de execução cujo serão coletados os dados de cadastro, formulario e xml do 1.0 - Deve ser preenchido com ("PRE/PRO")
            - environment_blz: Refere-se ao ambiente de execução cujo serão inseridos os dados de cadastro, formulario e xml do 2.0 - Deve ser preenchido com ("STG/PRE/PRO")
            - owner: Refere-se a matricula do dono/responsavel pelo serviço (Geralmente sera atribuido a um Gestor)
            - creator_user_principal_name: Refere-se a matricula do usuário responsavel pela criação do serviço
            - display_name: Refere-se ao nome do usuário responsavel por criar o serviço
            - squad_name: Refere-se ao nome da squad que devera ser informado para cadastro do serviço

        """
        self.parameter = parameter
        self.postresql = PostgreSQL(parameters=self.parameter, owner=owner,
                                    creator_user_principal_name=creator_user_principal_name, display_name=display_name, squad_name=squad_name)
        self.camunda = Camunda(parameters=self.parameter,
                               environment_blz=environment_blz)
        self.mongo = MongoDB(parameters=self.parameter)
        self.owner = owner
        self.display_name = display_name
        self.squad_name = squad_name
        self.creator_user_principal_name = creator_user_principal_name
        self.xml = XmlTreatment()
        self.list_templates_exists_aie = []
        self.list_templates_exists_blz = []
        self.list_templates_aie = []
        self.workflow_name = None

    def migration_workflow(self, unique_id_aie, unique_id_blz, list_templates_blz, list_templates_exists_blz):
        """ Rotina criada para realizar a migração de um workflow da base do AIE para a base do Blaze 2.0

        Itens que serão impactados durante esse processo
        - Workflow
        Parametros:

        - unique_id_aie: Refere-se ao id do Workflow existente na base do AIE
        - unique_id_blz: Refere-se ao id do Workflow existente na base do Blaze
        """
        try:
            logging.debug('Iniciando rotina para migração de workflow')

            # Realiza o ajuste do id recebido por parametro
            new_workflow_id = 'Process_' + unique_id_blz + '.bpmn'
            """ Realiza a conexão e coleta do XML na base de dados """
            connection = self.postresql.postgre_connection(
                aie=True, blz=False, sgl=False)
            if connection == None:
                return False

            values = self.postresql.postgre_query_xml(
                connection=connection, unique_id=unique_id_aie)

            if values == None:
                return False
            if not self.postresql.postgre_close_connection(connection=connection):
                return False
            """ Realiza tratamento no xml  """
            # Realiza o replace do ID da versão do 1.0 para 2.0 em sua nova versão
            get_string_xml = values[2].replace(
                values[0].split('.')[0], new_workflow_id.split('.')[0])

            # Realiza o replace dos valores predefinidos na função dentro do arquivo xml
            apply_replace_xml = self.xml.apply_replace_value(
                get_string_xml, unique_id_aie)

            if apply_replace_xml == None:
                return False
            
            # Realiza o regex dos valores predefinidos na função dentro do arquivo xml
            xml = self.xml.apply_regular_expression(apply_replace_xml)
            xml = self.xml.fix_children(xml, list_templates_blz=list_templates_blz, list_templates_exists_blz=list_templates_exists_blz)
            """ Caso exista, remove o arquivo bpmn criado e cria uma nova versão a partir do xml coletado  """
            if not self.camunda.remove_bpmn_file():
                return False
            if not self.camunda.create_bpmn_file(xml_string=xml, unique_id=new_workflow_id):
                return False
            """ Realiza o envio do BPMN via post para o Blaze 2.0 """
            if not self.camunda.deployment_workflow(unique_id=new_workflow_id):
                return False
            logging.debug('Deploy realizado com sucesso para o workflow: ' + new_workflow_id)
            # Realiza a coleta do automation id na base do Blaze 2.0
            connection = self.postresql.postgre_connection(
                aie=False, blz=True, sgl=False)
            automation_id = self.postresql.postgre_query_automation_id(
                connection=connection, uuid_blz=unique_id_blz)
            if not self.postresql.postgre_close_connection(connection=connection):
                return False

            if automation_id == None:
                return False
            # Realiza o cadastro dos dados de migração e legacy id
            connection = self.postresql.postgre_connection(
                aie=False, blz=True, sgl=False)
            if not self.postresql.postgre_insert_migration(connection=connection, unique_id_aie=unique_id_aie, unique_id_blz=unique_id_blz, name=self.workflow_name, details=self.postresql.details):
                return False
            if not self.postresql.postgre_insert_legacy_id(connection=connection, unique_id_aie=unique_id_aie, automation_id=automation_id):
                return False
            if not self.postresql.postgre_close_connection(connection=connection):
                return False
            logging.debug('Dados armazenados na base de dados')
            return True
        except Exception as error:
            message = 'Falha na linha: ' + \
                str(format(sys.exc_info()[-1].tb_lineno)
                    ) + ' | Descricao: ' + str(error)
            logging.info(datetime.today().strftime('%d/%m/%Y - %H:%M') +
                  ' | ' + str(message))
            return False

    def migration_registration_and_form(self, unique_id_aie, unique_id_blz):
        """ Rotina criada para realizar a migração do cadastro e formulario de uma automação da base do AIE para a base do Blaze 2.0
        Itens que serão impactados durante esse processo
        - Cadastro
        - Formulario

        Parametros:

        - unique_id_aie: Refere-se ao id do Workflow existente na base do AIE
        - unique_id_blz: Refere-se ao id do Workflow existente na base do Blaze
        """
        try:
            logging.debug('Iniciando rotina para migração de cadastro e formulario')
            """ Realiza a conexão e coleta dos dados de cadastro na base de dados """
            postgre_conn = self.postresql.postgre_connection(
                aie=False, blz=False, sgl=True)
            if postgre_conn == None:
                return False
            postgre_values = self.postresql.postgre_query_register(
                connection=postgre_conn, unique_id=unique_id_aie)

            if postgre_values.empty:
                self.postresql.postgre_close_connection(
                    connection=postgre_conn)
                return None

            # Coleta o nome do workflow que sera armazenado na tabela migration
            self.workflow_name = postgre_values['name'][0]

            if self.workflow_name == None:
                self.workflow_name = ""
            if not self.postresql.postgre_close_connection(connection=postgre_conn):
                return False
            """ Realiza a conexão e coleta dos dados de formulario na base de dados """
            mongo_conn = self.mongo.mongo_connection()
            if mongo_conn == None:
                return False
            mongo_values = self.mongo.mongo_query_form(
                connection=mongo_conn, unique_id=unique_id_aie)

            def environmentalize_form(mongo_values):
                import json
                components = json.loads(mongo_values)
                needs_env = []
                does_not_need_env = []
                for v in components:
                    if 'http' in v:
                        logging.info(datetime.today().strftime('%d/%m/%Y - %H:%M') +
                              ' | Campo form dinamico contém URL' + str(v))
                    val = v.get('hidden', None)
                    if val == True:
                        d = v.get('defaultValue', None)
                        if d != None and 'blaze.paas' in d:
                            needs_env.append(v)
                            logging.info(datetime.today().strftime('%d/%m/%Y - %H:%M') +
                                  ' | Campo form dinamico contém URL BLAZE')
                            if 'pre.corp' in d:
                                logging.info(datetime.today().strftime(
                                    '%d/%m/%Y - %H:%M') + ' | <WARN> Campo form dinamico contém URL BLAZE !!!PRE!!!')
                            continue
                    does_not_need_env.append(v)

                    def process_each(x):
                        key = x.get('key')
                        val = x.get('defaultValue')

                        # TODO: REPLACE WITH CORRECT blz.paas URLS
                        envdict = {
                            'pre': 'blaze.paas.santanderbr.pre.corp',
                            'stg': 'blaze.paas.santanderbr.pre.corp',
                            'pro': 'blaze.paas.santanderbr.corp',
                            'dev': 'blaze.paas.santanderbr.pre.corp'
                        }

                        def process_env(y):
                            venv = x.copy()
                            venv.set('key', key+'_'+y)
                            venv.set('defaultValue', re.sub(
                                'blaze.paas.santanderbr.corp', envdict[y], defaultValue))

                        return list(map(process_env, ['dev', 'stg', 'pre', 'pro']))

                    xss = list(map(process_each, needs_env))
                    r = [x for xs in xss for x in xs]

                    logging.info('ok')

            # mongo_values = environmentalize_form(mongo_values)

            if mongo_values == None:
                return False
            if not self.mongo.mongo_close_connection(connection=mongo_conn):
                return False
            """ Realiza o insert dos dados de cadastro e formulario na base de dados do Blaze 2.0 """
            postgre_conn = self.postresql.postgre_connection(
                aie=False, blz=True, sgl=False)
            if postgre_conn == None:
                return False
            if not self.postresql.postgre_insert_query(connection=postgre_conn, sgl_values=postgre_values, mongo_form=mongo_values, uuid_automation=unique_id_blz, register=True, form=False):
                return False
            if not self.postresql.postgre_insert_query(connection=postgre_conn, sgl_values=postgre_values, mongo_form=mongo_values, uuid_automation=unique_id_blz, uuid_metric=self.reproducible_uuid(unique_id_aie + "_metric"), register=False, form=True):
                return False
            logging.debug('Migração de cadastro e formulario concluida')
            if not self.postresql.postgre_close_connection(connection=postgre_conn):
                return False
            return True
        except Exception as error:
            message = 'Falha na linha: ' + \
                str(format(sys.exc_info()[-1].tb_lineno)
                    ) + ' | Descricao: ' + str(error)
            logging.info(datetime.today().strftime('%d/%m/%Y - %H:%M') +
                  ' | ' + str(message))
            return False

    def reproducible_uuid(self, s):
        import uuid
        import random

        rd = random.Random()
        rd.seed(self.owner+"_"+self.parameter.sql_database_aie +
                "_"+self.squad_name+"_"+s)

        return str(uuid.UUID(int=rd.getrandbits(128)))

    def migration_package(self, unique_id_aie):
        unique_id_blz = self.reproducible_uuid(unique_id_aie)
        """ Rotina criada para realizar a migração completa de uma automação da base do AIE para a base do Blaze 2.0
        Itens que serão impactados durante esse processo
        - Cadastro
        - Formulario
        - Workflow

        Parametros:
        - unique_id_aie: Refere-se ao id do Workflow existente na base do AIE
        """
        try:
            postgre_conn = self.postresql.postgre_connection(
                aie=False, blz=False, sgl=True)
            if postgre_conn == None:
                return False
            postgre_values = self.postresql.postgre_query_register(
                connection=postgre_conn, unique_id=unique_id_aie)

            if postgre_values.empty:
                logging.info('' +
                      unique_id_aie + ' <NOTFOUND> cadastro SGL não encontrado')
                self.postresql.postgre_close_connection(
                    connection=postgre_conn)
                return None

            if postgre_values['st_ativo'].item() == 0:
                logging.info('' +
                      unique_id_aie + ' <SKIP> cadastro SGL INATIVO')
                self.postresql.postgre_close_connection(
                    connection=postgre_conn)
                return None

            if postgre_values['fl_draft'].item() == 1:
                logging.info('' +
                      unique_id_aie + ' <SKIP> cadastro SGL DRAFT')
                self.postresql.postgre_close_connection(
                    connection=postgre_conn)
                return None

            self.postresql.postgre_close_connection(connection=postgre_conn)

            connection = self.postresql.postgre_connection(
                aie=True, blz=False, sgl=False)
            if connection == None:
                return False
            xml_query_result = self.postresql.postgre_query_xml(
                connection=connection, unique_id=unique_id_aie)
            if xml_query_result == None:
                logging.info('' +
                      unique_id_aie + ' <NOTFOUND> xml do workflow não encontrado')
                return None
            if not self.postresql.postgre_close_connection(connection=connection):
                return False

            """ Realiza tratamento no xml  """
            self.list_templates_aie = self.xml.collect_templates_in_xml(
                xml_string=xml_query_result[2])

            """ Inicia a rotina para migração do workflow """
            connection = self.postresql.postgre_connection(
                aie=False, blz=True, sgl=False)
            list_database_ids = self.postresql.postgre_query_unique_id(
                connection=connection)
            if not self.postresql.postgre_close_connection(connection=connection):
                return False

            if unique_id_aie in list_database_ids[0]:
                logging.info('' +
                      unique_id_aie + ' <SKIP> já foi migrado')
                return unique_id_blz

            """ Prepara lista para criação e associação de novos templates (Filhos) """
            list_templates_blz = []

            for i in self.list_templates_aie:
                workflow_service = WorkflowService(parameter=self.parameter, owner=self.owner,
                                                   creator_user_principal_name=self.creator_user_principal_name, display_name=self.display_name, squad_name=self.squad_name)
                execution = workflow_service.migration_package(unique_id_aie=i)
                if execution == None or execution == False:
                    logging.info('' +
                          unique_id_aie + ' <FAILED> filho não migrado. Id do filho: '+i)
                    return False
                list_templates_blz.append((i, execution))
                connection = self.postresql.postgre_connection(
                    aie=False, blz=True, sgl=False)
                list_database_ids = self.postresql.postgre_query_unique_id(
                    connection=connection)
                if not self.postresql.postgre_close_connection(connection=connection):
                    return False

            list_templates_exists_blz = []
            for i in list_database_ids[0]:
                """ Realiza a ordenação da lista de templates existentes (Filhos) """
                self.list_templates_exists_blz.append(
                    (list_database_ids[0], list_database_ids[1]))

            # ========================================================================================#
            """ Valida a criação do workflow principal (Pai) """
            logging.debug('Verificando se o id informado ja foi submetido ao processo de migração')
            if unique_id_aie in list_database_ids[0]:
                logging.info('O Workflow: ' +
                      unique_id_aie + ' já foi migrado para o Blaze 2.0')
                return unique_id_blz

            logging.debug('' + unique_id_aie + ' <NEW> será migrado para o Blaze 2.0')

            a = self.migration_registration_and_form(
                unique_id_aie=unique_id_aie, unique_id_blz=unique_id_blz)
            if a == None:
                logging.info('' +
                      unique_id_aie + ' <NOTFOUND> não encontrado no SGL')
                return None
            if not a:
                return False
            if not self.migration_workflow(unique_id_aie=unique_id_aie, unique_id_blz=unique_id_blz, list_templates_blz=list_templates_blz, list_templates_exists_blz=list_templates_exists_blz):
                return False

            logging.info('' + unique_id_aie +
                  ' <MIGRATED> -> Workflow Blaze 2.0 ' + unique_id_blz)

            return unique_id_blz
        except Exception as error:
            message = 'Falha na linha: ' + \
                str(format(sys.exc_info()[-1].tb_lineno)
                    ) + ' | Descricao: ' + str(error)
            logging.info(datetime.today().strftime('%d/%m/%Y - %H:%M') +
                  ' | ' + str(message))
            return False


# Start application
if __name__ == '__main__':
    import logging

    logging.basicConfig(level=logging.DEBUG, filename="logfile", filemode="a+", format="%(asctime)-15s %(levelname)-8s %(message)s")

    #logging.info("\n\n\nM I G R A T I O N   P R O C E S S   S T A R T I N G\n\n\n")

    #all_wf = ["wf1655146664091", "wf1655146671364", "wf1655496160249", "wf1697548817273", "wf1697571362334", "wf1697802338298", "wf1680545974550", "wf1681847076274", "wf1698760305875", "wf1698760393953", "wf1632446415588", "wf1632448549561", "wf1632448566321", "wf1632449511007", "wf1632479446190", "wf1632482645286", "wf1632505341461", "wf1632745621460", "wf1632763699063", "wf1632947483959", "wf1632950823525", "wf1632951591196", "wf1632959239039", "wf1632963119186", "wf1632965204433", "wf1634865074540", "wf1636679938858", "wf1637589096066", "wf1637692835001", "wf1638235206045", "wf1639590860898", "wf1643904200670", "wf1640091855045", "wf1640632685414", "wf1641840112563", "wf1641847061749", "wf1641933488675", "wf1641950528835", "wf1642689546100", "wf1655910936127", "wf1643991753879", "wf1643414162973", "wf1643999901007", "wf1700259550971", "wf1700659497871", "wf1701193782346", "wf1701194851380", "wf1643822248640", "wf1643822865684", "wf1643823958345", "wf1643826942991", "wf1643828036695", "wf1643830298774", "wf1643833026803", "wf1643833032448", "wf1643835184572", "wf1644446257641", "wf1644446315125", "wf1644585277273", "wf1644585404082", "wf1644601035228", "wf1644874696035", "wf1644936510114", "wf1645052769956", "wf1645624491334", "wf1656011844932", "wf1646252918736", "wf1646858322048", "wf1646930129889", "wf1649126824235", "wf1649179207996", "wf1649257302001", "wf1649362614052", "wf1650927916154", "wf1651072830811", "wf1651081278803", "wf1651505154495", "wf1651072847005", "wf1651522757309", "wf1651585677301", "wf1651612548643", "wf1651687515249", "wf1651779305137", "wf1651779750355", "wf1651839796901", "wf1651257089576", "wf1651862906286", "wf1652099108680", "wf1652130105580", "wf1652288257901", "wf1652364943800", "wf1652365461065", "wf1652379045799", "wf1652468087396", "wf1652472663262", "wf1652818379216", "wf1652967001384", "wf1652978148633", "wf1652988645289", "wf1680636493858", "wf1653336610501", "wf1653337582209", "wf1653337621721", "wf1653337737393", "wf1653337948790", "wf1653338013989", "wf1653338148191", "wf1701691483672", "wf1653397498991", "wf1653414333316", "wf1653509292758", "wf1701973585548", "wf1654018903029", "wf1654277031177", "wf1656016272456", "wf1656360826521", "wf1656444855550", "wf1656609441870", "wf1702300725191", "wf1680702977980", "wf1680703047470", "wf1682707748347", "wf1683221406938", "wf1683567772773", "wf1683829124857", "wf1683832073879", "wf1684335474516", "wf1684516550010", "wf1685398179522", "wf1685719548768", "wf1685720624491", "wf1685729091739", "wf1686596397599", "wf1686941601326", "wf1687545341362", "wf1688130913912", "wf1688131096930", "wf1688131235803", "wf1688381652288", "wf1688382263821", "wf1656610241107", "wf1702319702582", "wf1657132494860", "wf1657225199801", "wf1657227233452", "wf1657228890918", "wf1657244261636", "wf1657244357838", "wf1657244576143", "wf1657244843185", "wf1657244895217", "wf1657318399738", "wf1660226592813", "wf1657820452286", "wf1657822668308", "wf1657826472745", "wf1657829507538", "wf1657831532785", "wf1660226594484", "wf1657890987119", "wf1657891891861", "wf1657892340528", "wf1657893480285", "wf1657893772355", "wf1657911445785", "wf1657914004574", "wf1657914538078", "wf1657914975502", "wf1657915676332", "wf1657916440319", "wf1657916930815", "wf1658150459171", "wf1658151677765", "wf1658152184334", "wf1658152646092", "wf1658153206267", "wf1658153582480", "wf1658153854003", "wf1658155665298", "wf1658156118346", "wf1658239870582", "wf1658240865545", "wf1658241838319", "wf1658264906054", "wf1658333612503", "wf1658352913730", "wf1658352920262", "wf1658353547365", "wf1658355477211", "wf1658355609667", "wf1658356423366", "wf1658356969603", "wf1658357055489", "wf1658357663396", "wf1658333711627", "wf1653065406728", "wf1658372118500", "wf1658423080787", "wf1658435467625", "wf1658513465788", "wf1658946126613", "wf1659645153394", "wf1659702462016", "wf1660592544283", "wf1660762595594", "wf1660762678445", "wf1660763141990", "wf1660763213785", "wf1660940678792", "wf1661203114095", "wf1661345890373", "wf1661346383371", "wf1661346392108", "wf1661364557272", "wf1661450228297", "wf1661450706328", "wf1661464133597", "wf1661517370707", "wf1661517900461", "wf1662422728984", "wf1663354749146", "wf1663952689282", "wf1663953428810", "wf1663954703353", "wf1664886434368", "wf1664889011549", "wf1665067611365", "wf1665355580560", "wf1665355662638", "wf1665405667887", "wf1665411405615", "wf1665412385058", "wf1666294346874", "wf1666705555880", "wf1666706108181", "wf1667225617738", "wf1667225619352", "wf1667573439030", "wf1667575619401", "wf1667588054710", "wf1667849649333", "wf1667850259957", "wf1667920574616", "wf1668002013170", "wf1668004660902", "wf1668116020728", "wf1668170553533", "wf1668692664892", "wf1668710908089", "wf1668712238965", "wf1673288284781", "wf1668715595702", "wf1668792078599", "wf1669037543786", "wf1669051415237", "wf1669051737451", "wf1669051807960", "wf1669055223223", "wf1669056614031", "wf1669140229793", "wf1669413173722", "wf1669923484226", "wf1669923487676", "wf1669938900455", "wf1669941749869", "wf1669981342413", "wf1670217831577", "wf1670833222772", "wf1671035872502", "wf1671036252504", "wf1671211675652", "wf1671212402365", "wf1671454061580", "wf1672149908843", "wf1672149918362", "wf1672149921572", "wf1672165479353", "wf1672931680566", "wf1672932955358", "wf1672937516256", "wf1672937560781", "wf1672938288740", "wf1672938612468", "wf1672938928498", "wf1672939921780", "wf1672940544993", "wf1673288702465", "wf1673289160024", "wf1673289665584", "wf1673289953301", "wf1673290215233", "wf1673290337406", "wf1673378559737", "wf1673378946253", "wf1673396133327", "wf1673457714800", "wf1673458669463", "wf1673458932127", "wf1673458980634", "wf1673459215348", "wf1673459554099", "wf1673459890192", "wf1673459955047", "wf1673460200508", "wf1673464395814", "wf1673464396680", "wf1673532484567", "wf1673532486048", "wf1673535291140", "wf1702902169549", "wf1673644884961", "wf1674562269125", "wf1674562793503", "wf1674563871706", "wf1674564086762", "wf1674564144097", "wf1674564361653", "wf1674564616048", "wf1674565414008", "wf1674566781419", "wf1674733529270", "wf1674733711715", "wf1674734208096", "wf1674734388756", "wf1674761651863", "wf1675688946813", "wf1675689475906", "wf1675704970784", "wf1675706922216", "wf1675709607667", "wf1675710174241", "wf1675710448086", "wf1675710882077", "wf1675950391111", "wf1675950563894", "wf1675950713487", "wf1675950881987", "wf1675961626877", "wf1676035484728", "wf1676041157264", "wf1676049288373", "wf1676309148768", "wf1676310417222", "wf1676488554219", "wf1676488776398", "wf1677107975288", "wf1677108355264", "wf1677669426877", "wf1677703913142", "wf1677706880230", "wf1677761884108", "wf1678218167245", "wf1678270207987", "wf1678295282207", "wf1678296702438", "wf1678463181808", "wf1678463279148", "wf1681756679588", "wf1682450860246", "wf1678565117691", "wf1678724365508", "wf1678900066078", "wf1679338763141", "wf1679350100131", "wf1679404184323", "wf1679411327402", "wf1679479502457", "wf1679479542146", "wf1679495892534", "wf1679497407594", "wf1679948162515", "wf1680014256079", "wf1680032606349", "wf1681823553328", "wf1703185344963", "wf1703246901870", "wf1682707943976", "wf1683052710060", "wf1683826458709", "wf1683831264109", "wf1683898718992", "wf1684431642215", "wf1684516298905", "wf1685107763362", "wf1685368342108", "wf1676049573133", "wf1685553697880", "wf1685715356997", "wf1685719896521", "wf1685728850223", "wf1686056747747", "wf1686162973294", "wf1686319145786", "wf1686921536925", "wf1686938073163", "wf1686942645996", "wf1687377745814", "wf1687403202370", "wf1687455376547", "wf1687538182931", "wf1687402674131", "wf1687812429706", "wf1687817111992", "wf1688382686644", "wf1688383248071", "wf1688383579670", "wf1688383917220", "wf1688586584098", "wf1688586585073", "wf1688674674473", "wf1689776047050", "wf1690219947358", "wf1690506613366", "wf1690507855900", "wf1690508762283", "wf1690508763185", "wf1690814113429", "wf1691094648793", "wf1691159199828", "wf1691185082835", "wf1691428835747", "wf1691498361643", "wf1692031464046", "wf1692724127786", "wf1692725195887", "wf1692725372252", "wf1692725528582", "wf1692725673510", "wf1692727068681", "wf1692819139892", "wf1693339153597", "wf1693833933190", "wf1693935888463", "wf1693938160575", "wf1693939015558", "wf1694634629347", "wf1694716831471", "wf1694717341500", "wf1695042725007", "wf1695304260570", "wf1703769417673", "wf1696602076098", "wf1696620436106", "wf1703854038144", "wf1704736231346", "wf1708544984990", "wf1709048014156", "wf1709064563329", "wf1709315828964", "wf1709747787465", "wf1709910014303", "wf1709925916537", "wf1710158288903" ]

    # list_wf = [
    #     'arch-wf1657914975502',
    #     # 'srv-aprovacoes-asset',
    #     'wf1686162973294',
    #     'wf1663952689282',
    #     'wf1693935888463',
    #     'wf1693939015558',
    #     'wf1693939015558',
    #     # 'wf1663953428810',
    #     'wf1657914538078',
    #     'wf1668792078599',
    #     'wf1658357663396',
    #     'wf1658356423366',
    #     'wf1679497407594',
    #     'wf1685107763362'
    # ]

    # list_wf = ['wf1701973585548']

    # list_wf = ['wf1656609441870','wf1649362614052','wf1657244895217']

    # 
    #list_wf = ['wf1656609441870']


    #list_wf = [
    #     'wf1700659497871', # Template Python Cloud Native
    #     'wf1701973585548', # Template Node Cloud Native
    #     'wf1702300725191', # Template .NET Cloud Native
    #     'wf1702319702582', # Template Golang Cloud Native
    #     'wf1703185344963', # Template Flume Cloud Native
    #     'wf1703246901870', # Template SPA Cloud Native
    #     'wf1675961626877', # Template Cloud_Native Generic
    #     'wf1661203114095', # Template API WIZARD Generic
    #     'wf1660226594484', # Template MOBILE Generic
    #     'wf1659702462016', # Template LIBRARY Generic
    #     'wf1659645153394', # Template IAAS Generic
    # ]

    list_wf = ['wf1688686363848']
    environment_aie = "PRE"
    environment_blz = "PRE"
    parameter = Parameters(environment_aie=environment_aie,
                           environment_blz=environment_blz)
    workflow_service = WorkflowService(parameter=parameter, owner="",
                                       creator_user_principal_name="", display_name="Everton Carneiro", squad_name="BLZ 1.0 Migration")
    for i, wf in enumerate(list_wf):
        logging.info('' + wf +
              ' <BEGIN> (' + str(i + 1) + '/' + str(len(list_wf)) + ')')
        execution = workflow_service.migration_package(unique_id_aie=wf)
    if execution:
        logging.info(datetime.today().strftime('%d/%m/%Y - %H:%M') +
              ' | Execução concluida com sucesso')
    else:
        logging.info(datetime.today().strftime('%d/%m/%Y - %H:%M') +
              ' | Falha durante a execução do processo')

    # message = input('\nPressione qualquer tecla para finalizar...')